%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 3 2 224 472 
%%LanguageLevel: 2
%%Creator: CorelDRAW (评估版)
%%Title: CRAC.eps
%%CreationDate: Mon Oct 14 20:10:54 2024
%%DocumentProcessColors: Cyan Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW (评估版) 版本 25.2.0.304
/EpsFile true def
%%BeginResource: procset wCorel25Dict 25.0 0
/wCorel25Dict 300 dict def wCorel25Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel25Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 228 474
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
54.65849 125.98072 80.07874 149.82009 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
72.90539 138.54643 m
79.82816 140.21320 L
80.17569 138.56088 80.16123 137.02224 79.78791 135.59244 c
79.41458 134.16265 78.70054 132.85757 77.65115 131.67950 C
76.60403 130.49717 75.06737 129.37805 73.05165 128.31562 c
70.59997 127.02359 68.43657 126.26617 66.57449 126.04507 C
64.70476 125.82510 62.80611 126.17008 60.88337 127.08198 C
58.96573 127.99701 57.38400 129.62353 56.14639 131.97203 c
54.49550 135.10460 54.21742 138.03732 55.31726 140.76198 C
56.41483 143.49061 58.78006 145.81219 62.40728 147.72416 c
65.24759 149.22085 67.73159 149.91647 69.86778 149.80904 c
72.00340 149.70189 73.99106 148.85773 75.83046 147.27685 C
70.28362 142.88457 L
69.76431 143.34831 69.31587 143.65219 68.93773 143.79647 C
68.31496 144.03685 67.65619 144.12869 66.96652 144.07483 C
66.27203 144.01871 65.57924 143.80554 64.88107 143.43761 c
63.30586 142.60762 62.37439 141.43521 62.09631 139.92633 C
61.87918 138.79871 62.21367 137.38734 63.10772 135.69109 c
64.21521 133.58920 65.35531 132.35499 66.52233 131.97345 C
67.69446 131.59474 68.96466 131.76879 70.33465 132.49077 c
71.66806 133.19348 72.51109 134.03764 72.86145 135.02750 C
73.21436 136.01254 73.22712 137.18466 72.90539 138.54643 C
@c
F

@rax %Note: Object
82.98822 133.64872 111.81940 156.86334 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
86.45131 133.64872 m
82.98822 154.25461 L
95.80620 156.40866 L
98.18192 156.80806 100.02983 156.94583 101.33858 156.81572 C
102.65272 156.69128 103.77184 156.23802 104.69622 155.45112 C
105.62003 154.66904 106.18980 153.62022 106.40976 152.31061 c
106.60252 151.16400 106.47241 150.13077 106.02652 149.20214 C
105.57496 148.27294 104.87650 147.46479 103.93795 146.77427 C
103.33191 146.33717 102.47981 145.91282 101.37373 145.50973 C
102.33213 145.40967 103.04135 145.26709 103.50680 145.08397 C
103.81323 144.96265 104.28633 144.67323 104.91676 144.21090 c
105.55030 143.74630 105.94687 143.35143 106.20992 143.11106 C
111.81940 137.98431 L
104.67666 136.74501 L
97.62803 142.13254 L
96.85247 142.72554 95.86431 143.09348 95.41134 143.26441 c
94.80954 143.49175 94.14935 143.54107 93.44806 143.42315 c
92.77030 143.30920 L
94.17543 134.94671 L
86.45131 133.64872 L
@c
92.11550 147.20485 m
95.36060 147.75024 L
95.70841 147.80863 96.37087 148.01386 97.34769 148.37017 C
97.84318 148.54252 98.22416 148.82854 98.49061 149.22822 C
98.75140 149.62734 98.84665 150.05282 98.77096 150.50381 c
98.65899 151.17080 98.31827 151.63625 97.74879 151.90554 C
97.17817 152.17965 96.19228 152.19638 94.78970 151.96082 c
91.41165 151.39304 L
92.11550 147.20485 L
@c
F

@rax %Note: Object
114.49984 133.41855 143.34548 157.21143 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
135.26306 139.36734 m
124.29893 140.98450 L
121.67490 137.16737 L
114.49984 137.64643 L
128.98545 157.21143 L
135.08901 156.33524 L
143.34548 133.41855 L
136.51030 134.99235 L
135.26306 139.36734 L
@c
133.88485 143.67430 m
131.03518 151.12120 L
126.57430 144.74353 L
133.88485 143.67430 L
@c
F

@rax %Note: Object
147.66548 126.09043 173.02535 149.52529 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
164.47606 134.15556 m
170.22671 129.95575 L
169.19178 128.62176 168.00945 127.63701 166.67745 126.99666 C
165.34602 126.35603 163.88901 126.05613 162.31181 126.09383 C
160.73263 126.12728 158.88472 126.57430 156.77065 127.42384 c
154.19906 128.45707 152.22189 129.61616 150.84850 130.89288 C
149.47087 132.17641 148.50510 133.84687 147.95631 135.90312 C
147.41291 137.95710 147.62976 140.21546 148.61934 142.67877 c
149.93943 145.96441 151.99569 148.07424 154.78441 148.99861 C
157.57512 149.92781 160.87578 149.62677 164.68044 148.09805 c
167.65965 146.90126 169.79726 145.45729 171.09751 143.75934 c
172.39776 142.06167 173.04038 140.00003 173.02507 137.57471 C
166.08728 138.96142 L
166.10485 139.65761 166.04646 140.19619 165.91181 140.57773 C
165.69184 141.20816 165.33581 141.76998 164.84825 142.26066 C
164.35616 142.75389 163.74529 143.14422 163.01310 143.43846 c
161.36107 144.10233 159.86438 144.05386 158.53436 143.28935 C
157.53373 142.72526 156.67427 141.55710 155.95937 139.77780 c
155.07383 137.57357 154.87030 135.90539 155.33461 134.76869 C
155.80460 133.63030 156.75874 132.77452 158.19591 132.19710 c
159.59452 131.63528 160.78365 131.53861 161.76501 131.91194 C
162.74438 132.28044 163.64636 133.02907 164.47606 134.15556 C
@c
F

@rax %Note: Object
69.25890 206.20970 158.27046 233.60428 @E
/$fm 0 def
 0 O 0 @g
0.0000 1.0000 1.0000 0.0000  create_cmyk_color set_solid_fill
88.05402 219.94413 m
82.02926 219.21506 74.25128 217.10438 70.21446 212.93943 c
68.32261 210.98778 69.09902 207.35972 73.82126 206.35058 c
78.40942 205.37008 138.32079 209.18013 156.84690 228.30945 c
163.48195 235.16050 144.95187 234.23187 141.66000 231.79890 C
147.74627 232.16712 153.17631 231.65150 149.10888 227.26375 c
139.02491 216.38636 95.67780 210.20598 84.48718 211.99720 c
76.56917 213.26428 83.57528 217.88277 88.05402 219.94413 C
@c
F

@rax %Note: Object
159.10384 200.96787 198.28006 275.93717 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
166.66214 211.27493 m
190.72148 211.27493 L
190.72148 266.07373 L
166.66214 266.07373 L
166.66214 211.27493 L
@c
190.72148 272.44091 m
190.72148 275.93717 L
198.28006 275.93717 L
198.28006 200.96787 L
190.72148 200.96787 L
190.72148 204.90803 L
166.66214 204.90803 L
166.66214 200.96787 L
159.10384 200.96787 L
159.10384 275.93717 L
166.66214 275.93717 L
166.66214 272.44091 L
190.72148 272.44091 L
@c
182.60561 237.47017 m
187.11950 237.47017 L
189.86740 226.90091 L
184.76192 226.90091 L
182.60561 235.19480 L
182.60561 224.39991 L
189.44816 224.39991 L
189.44816 218.03301 L
168.04120 218.03301 L
168.04120 224.39991 L
175.04702 224.39991 L
175.04702 240.96246 L
168.04120 240.96246 L
168.04120 247.32964 L
175.04702 247.32964 L
175.04702 253.77080 L
168.04120 253.77080 L
168.04120 260.13798 L
189.44816 260.13798 L
189.44816 253.77080 L
182.60561 253.77080 L
182.60561 247.32964 L
189.44816 247.32964 L
189.44816 240.96246 L
182.60561 240.96246 L
182.60561 237.47017 L
@c
F

@rax %Note: Object
27.63581 200.94378 66.91181 275.89946 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
35.19439 225.60009 m
43.44888 225.60009 L
43.44888 255.78482 L
35.19439 255.78482 L
35.19439 225.60009 L
@c
35.19439 262.15172 m
43.44888 262.15172 L
43.44888 275.89946 L
51.00746 275.89946 L
51.00746 262.15172 L
59.35323 262.15172 L
59.35323 264.86362 L
66.91181 264.86362 L
66.91181 215.57792 L
59.35323 215.57792 L
59.35323 219.23320 L
51.00746 219.23320 L
51.00746 200.94378 L
43.44888 200.94378 L
43.44888 219.23320 L
35.19439 219.23320 L
35.19439 215.57792 L
27.63581 215.57792 L
27.63581 264.86362 L
35.19439 264.86362 L
35.19439 262.15172 L
@c
51.00746 255.78482 m
51.00746 225.60009 L
59.35323 225.60009 L
59.35323 255.78482 L
51.00746 255.78482 L
@c
F

@rax %Note: Object
3.70035 2.41909 223.64674 471.88261 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.5490 0.1020 0.0000  create_cmyk_color set_solid_fill
218.26091 264.17820 m
128.31591 461.63282 L
121.12923 475.43811 105.12142 475.15805 98.96202 461.63707 C
9.01729 264.18274 L
1.91339 249.77083 2.31732 224.82822 7.92255 212.52302 C
38.93074 144.45071 L
37.44170 143.47304 35.96060 142.46447 34.48885 141.42557 C
34.89676 140.49609 35.30863 139.56180 35.72334 138.62324 C
31.00762 135.25512 26.36022 131.57631 21.79219 127.58910 C
32.67241 116.74828 36.52724 104.23559 39.52006 89.35512 C
44.63036 95.60523 50.44706 100.90375 56.76350 105.30255 C
98.96202 12.66463 L
105.12142 -0.85606 121.12923 -1.13641 128.31591 12.66917 C
170.51669 105.31162 L
170.51329 105.31389 170.50989 105.31587 170.50677 105.31814 C
177.28044 100.72517 183.25446 95.25345 188.10085 88.97046 C
190.82551 103.30781 195.09137 116.49005 205.51209 127.36346 C
200.97496 131.44365 196.36441 135.18850 191.69348 138.60397 C
192.06709 139.48072 192.44154 140.35663 192.81515 141.23339 C
191.32243 142.31112 189.81950 143.35597 188.30750 144.36765 C
219.35055 212.51565 L
225.56551 228.52828 224.89483 249.61493 218.26091 264.17820 C
@c
48.80324 150.42444 m
20.57641 212.38781 L
14.21802 228.06283 14.47143 248.51140 21.63855 264.24539 C
88.54072 411.11206 L
109.53893 378.12926 L
109.53893 355.05780 L
109.53893 353.91770 108.95726 353.34765 108.00709 353.05965 C
99.29877 350.41833 93.06680 343.08935 93.06680 334.58683 C
93.06680 330.28951 94.66413 326.30797 97.36469 323.07137 C
94.66441 319.83449 93.06680 315.85436 93.06680 311.55789 C
93.06680 307.26057 94.66441 303.28044 97.36469 300.04356 C
94.66441 296.80696 93.06680 292.82542 93.06680 288.52894 C
93.06680 279.93260 99.45496 272.59965 108.29225 269.96854 C
109.08198 269.74517 109.53893 269.40586 109.53893 268.51663 C
109.53893 257.13184 L
89.31997 255.10507 73.35043 238.28712 72.65934 217.71213 C
74.71984 218.66995 76.88976 219.49710 79.01008 220.14680 C
80.92460 237.55266 95.74498 251.17143 113.64661 251.17143 C
125.92715 251.17143 136.75890 244.76258 142.96791 235.11855 C
144.89972 235.70872 147.14022 236.10926 149.43345 236.31591 C
143.00646 247.76079 131.25005 255.84009 117.56778 257.14857 C
117.56778 272.03074 L
117.56778 274.45748 115.80718 275.94028 113.49808 276.17698 C
106.57559 277.02709 101.22009 282.24935 101.22009 288.52866 C
101.22009 290.93102 102.00557 293.17861 103.36139 295.08576 C
106.86104 293.10718 111.02598 291.95688 115.48885 291.95688 C
119.95143 291.95688 124.11666 293.10718 127.61603 295.08576 C
133.65468 298.09956 132.73285 302.43146 127.61603 305.00079 C
124.11638 306.97909 119.95143 308.12910 115.48885 308.12910 C
111.02598 308.12910 106.86104 306.97909 103.36139 305.00079 C
102.00529 306.90822 101.22009 309.15496 101.22009 311.55761 C
101.22009 313.95997 102.00529 316.20671 103.36139 318.11386 C
106.86161 316.13584 111.02598 314.98583 115.48885 314.98583 C
119.95143 314.98583 124.11581 316.13584 127.61603 318.11386 C
133.41940 321.16365 133.14557 325.16957 127.61603 328.02888 C
124.11638 330.00746 119.95143 331.15805 115.48885 331.15805 C
111.02598 331.15805 106.86104 330.00746 103.36167 328.02888 C
102.00529 329.93603 101.22009 332.18391 101.22009 334.58655 C
101.22009 340.91887 106.70202 345.91493 113.67581 346.95865 C
115.25414 347.19506 117.56778 348.57128 117.56778 351.55361 C
117.56778 378.33477 L
138.61162 411.38957 L
205.71449 264.07729 L
213.57893 247.28939 213.19058 226.63672 206.75339 212.50545 C
178.46957 150.41452 L
159.03524 161.33584 138.34998 167.06551 117.56778 167.67326 C
117.56778 175.49887 L
138.32901 177.48397 154.65997 195.05679 154.65997 216.32287 C
154.65997 218.49420 154.48791 220.62699 154.15994 222.70876 C
152.33357 221.62989 150.38617 220.60743 148.33531 219.64110 C
148.43934 218.54863 148.49518 217.44198 148.49518 216.32287 C
148.49518 197.12948 132.84000 181.47430 113.64661 181.47430 C
102.66491 181.47430 92.84343 186.60132 86.44762 194.58142 C
89.12750 198.63581 91.94343 202.47591 94.89940 206.08016 C
93.24992 205.87209 91.64494 205.68444 90.09014 205.51436 C
88.56425 202.28003 87.21865 198.76961 86.15565 194.94964 C
83.88992 197.85543 82.07405 201.12746 80.81263 204.65887 C
78.40857 204.48255 76.26529 204.36406 74.43950 204.29518 C
79.21191 188.80554 92.94463 177.17953 109.53893 175.51587 C
109.53893 167.65370 L
88.86869 166.94702 68.24296 161.18107 48.80665 150.41962 C
48.80324 150.42444 L
@c
90.73984 415.94003 m
109.21578 456.49956 L
111.58923 461.70964 115.47921 461.71049 118.06356 456.49956 C
136.53865 415.94003 L
113.48787 415.94003 L
113.48787 415.93691 L
113.48787 415.94003 L
90.73984 415.94003 L
@c
162.19304 114.86948 m
148.76476 123.30425 133.24706 127.66365 117.57203 128.31704 C
117.57203 91.98510 L
146.43383 91.98510 L
142.23373 82.75096 L
84.87921 82.75096 L
80.67940 91.98510 L
109.54857 91.98510 L
109.54857 128.31846 L
94.11222 127.66706 78.70791 123.27619 64.90630 115.07131 C
109.21578 17.79902 L
111.58753 12.59291 115.47921 12.57704 118.06356 17.80639 C
162.25909 114.82809 L
162.19304 114.86948 L
@c
64.61235 114.89641 m
64.54658 114.85729 64.48139 114.81789 64.41591 114.77849 C
64.48139 114.81789 64.54658 114.85729 64.61235 114.89641 C
@c
82.97036 226.87200 m
98.27490 227.99083 114.25068 229.91499 128.48117 233.18192 C
118.85301 228.60794 110.16765 222.23594 102.35083 214.35562 C
99.44589 214.04976 96.87827 213.92617 94.86142 214.03616 C
97.66063 218.33858 100.67301 222.03723 103.51077 225.26107 C
95.99272 225.30586 89.68280 225.88753 82.97036 226.87200 C
@c
91.69682 193.57795 m
93.75024 198.04082 95.75235 202.39937 98.18589 206.51471 C
101.09424 206.91553 104.11002 207.37672 107.18277 207.90170 C
108.81581 203.93830 112.99805 201.29414 118.27814 202.17005 C
128.51603 203.86857 133.43414 208.55849 135.04819 214.49707 C
137.75187 215.36476 140.38413 216.29849 142.91206 217.30110 C
142.45654 205.33068 133.90016 193.57795 118.14406 193.57795 C
91.69682 193.57795 L
@c
103.90649 214.53307 m
105.80769 216.71235 107.96995 218.77625 110.49165 220.69644 C
108.68598 218.85279 107.53682 216.88611 106.94041 214.94580 C
105.90208 214.79102 104.88841 214.65269 103.90649 214.53307 C
@c
135.55361 221.84844 m
135.30019 224.47276 134.65417 227.18665 133.73631 229.88353 C
130.44161 239.56724 116.36504 241.53024 105.39014 240.83405 C
127.25405 246.27940 139.16948 236.56819 142.16910 224.56205 C
140.43628 223.68019 138.17197 222.76091 135.55361 221.84844 C
@c
98.67770 242.57934 m
100.82211 242.57934 102.57109 240.83036 102.57109 238.68595 c
102.57109 236.54183 100.82211 234.79285 98.67770 234.79285 c
96.53329 234.79285 94.78431 236.54183 94.78431 238.68595 c
94.78431 240.83036 96.53329 242.57934 98.67770 242.57934 c
@c
189.38665 133.19178 m
185.55817 124.21020 181.73027 115.22806 177.90293 106.24592 C
180.26277 104.30135 182.50328 102.22554 184.60602 100.01962 C
187.83269 111.72331 190.65798 118.06668 197.34690 126.50031 C
194.79061 128.88113 192.13143 131.10831 189.38665 133.19178 C
@c
49.91556 106.82135 m
46.06639 115.57304 41.90230 124.74454 37.92246 133.67083 C
35.03055 131.71096 32.24239 129.63430 29.57216 127.44425 C
37.86888 117.48671 39.20117 112.47761 42.68863 100.59647 C
44.98923 102.81118 47.40293 104.88586 49.91556 106.82135 C
@c
41.35946 139.33304 m
86.92894 169.38709 139.57512 169.10532 185.94454 139.34863 C
181.34050 128.54665 179.23720 124.28504 174.63317 113.48306 C
141.16422 138.51099 89.82794 142.64249 52.99455 113.48306 C
48.33128 124.10816 46.02274 128.70822 41.35946 139.33304 C
@c
97.56595 54.85635 m
129.54614 54.85635 L
125.34605 45.62220 L
101.76576 45.62220 L
97.56595 54.85635 L
@c
89.07902 73.51682 m
138.03364 73.51682 L
133.83354 64.28268 L
93.27883 64.28268 L
89.07902 73.51682 L
@c
109.53893 389.09197 m
109.53893 409.47477 L
96.55852 409.47477 L
109.53893 389.09197 L
@c
117.56778 409.47477 m
117.56778 389.30117 L
130.41099 409.47477 L
117.56778 409.47477 L
@c
120.96510 323.07165 m
119.27735 323.68876 117.42746 324.03061 115.48885 324.03061 C
113.54995 324.03061 111.70006 323.68876 110.01231 323.07165 C
111.70035 322.45483 113.54995 322.11326 115.48885 322.11326 C
117.42746 322.11326 119.27707 322.45483 120.96510 323.07165 C
@c
120.96510 300.04328 m
119.27735 299.42617 117.42746 299.08431 115.48885 299.08431 C
113.54995 299.08431 111.70006 299.42617 110.01231 300.04328 C
111.70006 300.66009 113.54995 301.00167 115.48885 301.00167 C
117.42746 301.00167 119.27764 300.66009 120.96510 300.04328 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel25Dict 25.0 0
%%EOF
